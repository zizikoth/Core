import com.frame.version.Config
import com.frame.version.Dep
import com.frame.version.Module

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion Config.buildToolsVersion

    defaultConfig {
        applicationId Config.applicationId
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        testInstrumentationRunner Config.testInstrumentationRunner
        multiDexEnabled true
        resConfigs "zh"
        ndk { abiFilters 'armeabi-v7a' }
    }

    signingConfigs {
        sign {
            keyAlias SignKeyAlias
            keyPassword SignKeyPassword
            storeFile file(SignStoreFile)
            storePassword SignStorePassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.sign
            applicationIdSuffix '.debug'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def time = new Date().format("MM月dd日HH时mm分", TimeZone.getDefault())
                    outputFileName = "debug_v${variant.versionName}_${time}.apk"
                }
            }
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.sign
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def time = new Date().format("MM月dd日HH时mm分", TimeZone.getDefault())
                    outputFileName = "release_v${variant.versionName}_${time}.apk"
                }
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "8g"
        maxProcessCount 8
        dexInProcess = true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = "1.8" }

    buildFeatures { dataBinding = true }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation project(path: ':base:base')
    if (!Module.isModuleMainRunAlone) implementation project(path: ':module:main')
    if (!Module.isModuleHomeRunAlone) implementation project(path: ':module:home')
    if (!Module.isModuleProjectRunAlone) implementation project(path: ':module:project')
    if (!Module.isModuleSystemRunAlone) implementation project(path: ':module:system')
    kapt Dep.ARouterCompiler
    testImplementation Dep.TestJunit
    androidTestImplementation Dep.TestAndroidJunit
    androidTestImplementation Dep.TestAndroidEspresso
}